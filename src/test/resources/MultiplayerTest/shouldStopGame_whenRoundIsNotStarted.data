
before()

shouldStopGame_whenRoundIsNotStarted()
    settings().bool(ROUNDS_ENABLED, true)
    settings().integer(ROUNDS_TIME_BEFORE_START, 1)
    settings().integer(ROUNDS_PER_MATCH, 1)
    settings().integer(ROUNDS_PLAYERS_PER_ROOM, 3)
    givenFl(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼► ►   ☼
        ☼☼☼☼☼☼☼☼)
        givenPlayer([1,1])
            dice(1, 1)
        givenPlayer([3,1])
            dice(3, 1)
        dice(0)
    events().verifyAllEvents(
        listener(0) => []
        listener(1) => [],
        [])
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼Ѡ Z   ☼
        ☼☼☼☼☼☼☼☼,
        0)
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼Z Ѡ   ☼
        ☼☼☼☼☼☼☼☼,
        1)
    hero(0).right()
    hero(1).right()
    events().verifyAllEvents(
        listener(0) => []
        listener(1) => [],
        [])
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼Ѡ Z   ☼
        ☼☼☼☼☼☼☼☼,
        0)
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼Z Ѡ   ☼
        ☼☼☼☼☼☼☼☼,
        1)
    givenPlayer([5,1])
        dice(5, 1)
    tick()
    events().verifyAllEvents(
        listener(0) => [START_ROUND, [Round 1]]
        listener(1) => [START_ROUND, [Round 1]]
        listener(2) => [START_ROUND, [Round 1]],
        [])
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼► ( ( ☼
        ☼☼☼☼☼☼☼☼,
        0)
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼( ► ( ☼
        ☼☼☼☼☼☼☼☼,
        1)
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼( ( ► ☼
        ☼☼☼☼☼☼☼☼,
        2)
    hero(0).right()
    hero(1).right()
    hero(2).right()
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼ ► ( (☼
        ☼☼☼☼☼☼☼☼,
        0)
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼ ( ► (☼
        ☼☼☼☼☼☼☼☼,
        1)
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼      ☼
        ☼ ( ( ►☼
        ☼☼☼☼☼☼☼☼,
        2)

after()