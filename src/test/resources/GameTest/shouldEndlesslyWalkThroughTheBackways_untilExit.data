
before()

shouldEndlesslyWalkThroughTheBackways_untilExit()
    settings().integer(BACKWAYS_COUNT, 3)
    givenFl(
        ☼☼☼☼☼☼☼☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼►⊛    ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼)
        givenPlayer([1,2])
            dice(1, 2)
        dice(0)
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼►⊛    ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼,
        0)
    hero(0).right()
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼   [  ☼
        ☼      ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼ ⊛    ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼,
        0)
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼   ⊛  ☼
        ☼   [  ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼ ⊛    ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼,
        0)
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼ ►    ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼,
        0)
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼   [  ☼
        ☼      ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼ ⊛    ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼,
        0)
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼   ⊛  ☼
        ☼   [  ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼ ⊛    ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼,
        0)
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼ ►    ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼,
        0)
    hero(0).right()
    tick()
    assertF(
        ☼☼☼☼☼☼☼☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼   ⊛  ☼
        ☼      ☼
        ☼ ⊛►   ☼
        ☼######☼
        ☼☼☼☼☼☼☼☼,
        0)

after()
    events().getEvents() = 